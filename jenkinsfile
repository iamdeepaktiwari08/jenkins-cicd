pipeline {
    agent any

    environment {
        PORT = "8085"
        IMAGE_NAME = "apache-image"
        CONTAINER_NAME = "apache-container"
        REPO_URL = "https://github.com/iamdeepaktiwari08/jenkins-apache.git"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: "${env.REPO_URL}",
                    credentialsId: 'b511c055-0d97-4ebf-b6d8-8dd841895a15'
            }
        }

        stage('Firewall Setup') {
            steps {
                sh '''
                    sudo firewall-cmd --add-port=${PORT}/tcp --permanent || true
                    sudo firewall-cmd --reload
                '''
            }
        }

        stage('Stop Old Container') {
            steps {
                sh '''
                    if [ "$(docker ps -aq -f name=${CONTAINER_NAME})" ]; then
                        docker stop ${CONTAINER_NAME} || true
                        docker rm ${CONTAINER_NAME} || true
                    fi
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ${IMAGE_NAME} .'
            }
        }

        stage('Run Container') {
            steps {
                sh 'docker run -d --name ${CONTAINER_NAME} -p ${PORT}:80 ${IMAGE_NAME}'
            }
        }

        stage('Show URL') {
            steps {
                sh '''
                    SERVER_IP=$(hostname -I | awk '{print $1}')
                    echo "‚úÖ Apache running at: http://$SERVER_IP:${PORT}"
                '''
            }
        }

        stage('Selenium Test') {
            steps {
                sh '''
                    echo "‚ö° Running Selenium Test..."
                    python3 tests/test_apache.py "http://$(hostname -I | awk '{print $1}'):${PORT}"
                '''
            }
        }
    }

    post {
        success {
            echo "üéâ Deployment + Tests successful!"
        }
        failure {
            echo "‚ùå Deployment or Tests failed!"
        }
    }
}
